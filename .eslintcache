[{"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\index.js":"1","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\App.js":"2","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Upload.js":"4","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Board.js":"5","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\firebase.js":"6","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\CardInfo.js":"7","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\BoardStyle.js":"8","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Root.js":"9","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Child.js":"10","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\WaitingRoom.js":"11","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Deck.js":"12","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Memory.js":"13","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Hand.js":"14","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Clock.js":"15","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\FrontRow.js":"16","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\BackRow.js":"17","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Level.js":"18","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Stock.js":"19","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\CheckZone.js":"20","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ClimaxZone.js":"21","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\LogIn.js":"22","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\CardInfoStyle.js":"23","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\AppStyle.js":"24","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Register.js":"25","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Profile.js":"26","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reducer\\index.js":"27","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reducer\\FrontRowReducer.js":"28","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ViewDeck.js":"29","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\RegisterStatus.js":"30","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ResetPassword.js":"31","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ResetPasswordStatus.js":"32","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Navbar.js":"33","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ViewCard.js":"34","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Series.js":"35","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\MyDeck.js":"36","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Modal.js":"37","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\AddDeck.js":"38","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Friends.js":"39"},{"size":762,"mtime":1621877574914,"results":"40","hashOfConfig":"41"},{"size":4400,"mtime":1621878852923,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":11178,"mtime":1621877574910,"results":"44","hashOfConfig":"41"},{"size":19824,"mtime":1610623855828,"results":"45","hashOfConfig":"41"},{"size":466,"mtime":1608715795524,"results":"46","hashOfConfig":"41"},{"size":950,"mtime":1610623855829,"results":"47","hashOfConfig":"41"},{"size":2006,"mtime":1610623855841,"results":"48","hashOfConfig":"41"},{"size":437,"mtime":1610133193719,"results":"49","hashOfConfig":"41"},{"size":311,"mtime":1610070892244,"results":"50","hashOfConfig":"41"},{"size":3619,"mtime":1610623855838,"results":"51","hashOfConfig":"41"},{"size":4788,"mtime":1610623855832,"results":"52","hashOfConfig":"41"},{"size":2038,"mtime":1610623855835,"results":"53","hashOfConfig":"41"},{"size":897,"mtime":1610623855833,"results":"54","hashOfConfig":"41"},{"size":807,"mtime":1610623855832,"results":"55","hashOfConfig":"41"},{"size":3558,"mtime":1610623855833,"results":"56","hashOfConfig":"41"},{"size":3386,"mtime":1610623855827,"results":"57","hashOfConfig":"41"},{"size":971,"mtime":1610623855834,"results":"58","hashOfConfig":"41"},{"size":1136,"mtime":1610623855837,"results":"59","hashOfConfig":"41"},{"size":1600,"mtime":1610623855829,"results":"60","hashOfConfig":"41"},{"size":1799,"mtime":1610623855831,"results":"61","hashOfConfig":"41"},{"size":4241,"mtime":1621877574902,"results":"62","hashOfConfig":"41"},{"size":271,"mtime":1610623855841,"results":"63","hashOfConfig":"41"},{"size":271,"mtime":1616216350303,"results":"64","hashOfConfig":"41"},{"size":5390,"mtime":1621877574906,"results":"65","hashOfConfig":"41"},{"size":2488,"mtime":1622302549975,"results":"66","hashOfConfig":"41"},{"size":189,"mtime":1621877574915,"results":"67","hashOfConfig":"41"},{"size":480,"mtime":1621877574915,"results":"68","hashOfConfig":"41"},{"size":8731,"mtime":1622060756433,"results":"69","hashOfConfig":"41"},{"size":1396,"mtime":1621877574907,"results":"70","hashOfConfig":"41"},{"size":4415,"mtime":1621877574908,"results":"71","hashOfConfig":"41"},{"size":4408,"mtime":1621877574909,"results":"72","hashOfConfig":"41"},{"size":715,"mtime":1622302549973,"results":"73","hashOfConfig":"41"},{"size":5523,"mtime":1622049337913,"results":"74","hashOfConfig":"41"},{"size":1444,"mtime":1622045337299,"results":"75","hashOfConfig":"41"},{"size":2765,"mtime":1622240604176,"results":"76","hashOfConfig":"41"},{"size":3411,"mtime":1622049178330,"results":"77","hashOfConfig":"41"},{"size":4059,"mtime":1622061752572,"results":"78","hashOfConfig":"41"},{"size":9074,"mtime":1622302549972,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"18xsjx8",{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\index.js",[],["170","171"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\App.js",["172","173","174","175","176","177","178","179","180"],"import React,{useState, useEffect} from 'react';\r\n// import Board from './component/Board'\r\n// import CardInfo from './component/CardInfo'\r\nimport LogIn from './component/LogIn';\r\nimport axios from 'axios';\r\nimport firebase from './firebase';\r\nimport Profile from './component/Profile';\r\nimport Upload from './component/Upload';\r\nimport Register from './component/Register';\r\nimport RegisterStatus from './component/RegisterStatus';\r\nimport ResetPassword from './component/ResetPassword';\r\nimport ResetPasswordStatus from './component/ResetPasswordStatus';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  const [playerName,SetplayerName] = useState(\"\")\r\n  const [playerDeck,SetplayerDeck] = useState([])\r\n  const [playerCardtext,SetplayerCardtext] = useState([])\r\n  const [CardInfoImage,SetCardInfoImage] = useState(\"https://inwfile.com/s-l/z9w722.jpg\")\r\n  \r\n  const HandleCardOver = (e)=>{\r\n    let url = e.target.src\r\n    if(!url.includes('empty_card.jpg'))\r\n      SetCardInfoImage(url)  \r\n  }\r\n \r\n  const HandleplayerSubmitted = async (Childdata)=>{\r\n      SetplayerName(Childdata)\r\n      // let deckplayerid = '7ada5f4a-9b4e-4266-86b3-ca4fac938b2a'\r\n\r\n      // if(Childdata !== 'butter')\r\n      //   deckplayerid = '2e105c7e-feef-49e2-be1f-8232c83cdf97'\r\n      //   //load player deck\r\n      // try {\r\n      //   let playerDeck = await axios.post('http://localhost:5000/weissschwarz-f48e0/us-central1/app/deck/getDeck',{\r\n      //         DeckId:deckplayerid\r\n      //   })\r\n      //   playerDeck = playerDeck.data.deck[0].CardIdList\r\n      //   // load card in deck\r\n      //   let allcarddata = []\r\n      //   for(let i=0;i<playerDeck.length;i++){\r\n      //       let carddata = await axios.post('http://localhost:5000/weissschwarz-f48e0/us-central1/app/card/getCard',{\r\n      //         CardId:playerDeck[i].CardId\r\n      //       }) \r\n      //       allcarddata.push(carddata.data.card[0]) \r\n      //   }\r\n      //   //load card_url and card_text in deck\r\n      //   let allcardurl = []\r\n      //   let allcardtext = []\r\n      //   for(let i=0;i<allcarddata.length;i++){\r\n      //       let storageRef = firebase.storage().ref('card/'+allcarddata[i].series)\r\n      //       let url = await storageRef.child(allcarddata[i].name).getDownloadURL()\r\n      //       allcardtext.push({\r\n      //         url:url,\r\n      //         text:allcarddata[i].text\r\n      //       })\r\n      //       playerDeck.forEach(item => {\r\n      //         if(item.CardId === allcarddata[i].CardId){\r\n      //           for(let j=0;j<item.count;j++){\r\n      //             allcardurl.push(url)\r\n      //           }\r\n      //         }\r\n      //       })\r\n      //   }\r\n      //   SetplayerDeck(allcardurl)\r\n      //   SetplayerCardtext(allcardtext)\r\n      //   //update deck in database\r\n      //   const db = firebase.firestore()\r\n      //   db.collection(\"board\").doc(Childdata === 'butter' ? \"1234\" : \"5678\")\r\n      //     .update({deck:allcardurl})\r\n      //     .then(()=>{})\r\n      //     .catch(err=>console.log(err))\r\n      // } catch (error) {\r\n      //     console.log('error from load player data ' + error)\r\n      // }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    axios.post('http://localhost:5000/weissschwarz-f48e0/us-central1/app/signIn/auth', {}, {\r\n      headers:{\r\n        Authorization: 'Bearer ' + localStorage.getItem('token')  \r\n      }\r\n    }).then((response) => {\r\n      //console.log(response.data);\r\n      if(response.data.status === 'success'){\r\n        HandleplayerSubmitted(response.data.username);\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error);\r\n      throw error;\r\n    })\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          {playerName !== '' ? <Route path=\"/\" component={Profile}/> :\r\n            <Route path=\"/\" exact>\r\n              <LogIn SetplayerName={HandleplayerSubmitted}/>\r\n            </Route>\r\n          }\r\n          <Route path=\"/register\" exact component={Register}/>\r\n          <Route path=\"/register/:status\" exact component={RegisterStatus}/>\r\n          <Route path=\"/resetpassword\" exact component={ResetPassword}/>\r\n          <Route path=\"/resetpassword/:status/\" exact component={ResetPasswordStatus}/>\r\n          <Route path=\"/resetpassword/:status/:id\" component={ResetPasswordStatus}/>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Upload.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Board.js",[],["181","182"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\firebase.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\CardInfo.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\BoardStyle.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Root.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Child.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\WaitingRoom.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Deck.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Memory.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Hand.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Clock.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\FrontRow.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\BackRow.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Level.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Stock.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\CheckZone.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ClimaxZone.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\LogIn.js",["183"],"import React,{useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport ResetPassword from './ResetPassword';\r\n\r\nfunction LogIn(props){\r\n\r\n    const [username,Setusername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const HandleusernameChanged = (e)=>{\r\n        Setusername(e.target.value)\r\n    }\r\n    const handlePasswordChanged = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    const Submit = async (e)=>{\r\n        e.preventDefault()\r\n        axios.post('http://localhost:5000/weissschwarz-f48e0/us-central1/app/signIn/',{\r\n            username:username,\r\n            password:password\r\n        }).then((response) => {\r\n            console.log(response.data);\r\n            if(response.data.status === 'success'){\r\n                localStorage.setItem('token', response.data.token);\r\n                props.SetplayerName(username);\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    return(\r\n        <>\r\n            {/* logo */}\r\n            <div className=\"row justify-content-center\">\r\n                <img \r\n                    src=\"weiss_schwarz_logo.jpg\"\r\n                    alt=\"...\"\r\n                    style={{\r\n                        width:'40rem'\r\n                    }}\r\n                />\r\n            </div>\r\n            {/* form */}\r\n            <div className=\"row ms-2 me-2 justify-content-center\">\r\n                <div className=\"col-lg-4 col-md-6 col-sm-12 mt-5 shadow-lg bg-white rounded\" >\r\n                    <div className=\"mb-3 mt-3 ms-5 me-5\">\r\n                        <label htmlFor=\"username\" className=\"form-label\">username</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"username\" \r\n                            placeholder=\"Input your uername\" \r\n                            value={username} \r\n                            onChange={HandleusernameChanged}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-3 mt-3 ms-5 me-5\">\r\n                        <label htmlFor=\"password\" className=\"form-label\">password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\" \r\n                            id=\"password\" \r\n                            placeholder=\"Input your password\"\r\n                            value={password}\r\n                            onChange={handlePasswordChanged} \r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button \r\n                            className=\"btn btn-primary\"\r\n                            type=\"button\" \r\n                            onClick={Submit}\r\n                            style={{\r\n                                width:'80%',\r\n                                marginLeft:'10%',\r\n                                marginRight:'10%',\r\n                                marginTop:'10px',\r\n                                marginBottom:'25px',\r\n                            }}\r\n                        >\r\n                            Sign In\r\n                        </button>\r\n                    </div>        \r\n                </div>\r\n            </div>\r\n            {/* forget password & register */}\r\n            <div className=\"row justify-content-center\">\r\n                <div \r\n                    className=\"col-lg-4 col-md-6 col-sm-12\"\r\n                    style={{\r\n                        textAlign:'right',\r\n                        marginTop:'15px'\r\n                    }}\r\n                >\r\n                    <span style={{cursor:'pointer'}} >\r\n                        <Link to=\"/resetpassword\"> ลืมรหัสผ่าน ? </Link>\r\n                    </span> \r\n                    |\r\n                    <span style={{cursor:'pointer'}}>\r\n                        {' '}<Link to=\"/register\">สม้ครสมาชิก</Link>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LogIn","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\CardInfoStyle.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\AppStyle.js",[],["184","185"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Register.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Profile.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reducer\\index.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reducer\\FrontRowReducer.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ViewDeck.js",["186"],"import React, {useState, useEffect} from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Button, Card, Row, Col, Container} from 'react-bootstrap'; \r\nimport Modal from './Modal';\r\n\r\nfunction ViewDeck(){\r\n    \r\n    const { deckId } = useParams();\r\n    const [deck, setDeck] = useState([]);\r\n    const [deckName, setDeckName] = useState('');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalItem, setModalItem] = useState({});\r\n\r\n    const showCard = (card) => {\r\n        const characterOrder = [ 'name', 'CardId', 'color', 'level', 'cost', 'power', 'soul', 'trigger', 'CardType', 'CharacterType', 'cardUrl', 'text' ];\r\n        const climaxOrder = [ 'name', 'CardId','color', 'trigger', 'CardType', 'cardUrl', 'text' ];\r\n        const eventOrder = [ 'level', 'cost', 'name', 'CardId','color', 'trigger', 'CardType', 'cardUrl', 'text' ];\r\n        const tableItem = {};\r\n        if(card.CardType === 'character'){\r\n            characterOrder.forEach(key => {\r\n                tableItem[key] = card[key];\r\n            });\r\n        }else if(card.CardType === 'event'){\r\n            eventOrder.forEach(key => {\r\n                tableItem[key] = card[key];\r\n            })\r\n        }else{\r\n            climaxOrder.forEach(key => {\r\n                tableItem[key] = card[key];\r\n            })\r\n        }\r\n        setModalItem(tableItem);\r\n        setShowModal(true);\r\n    }\r\n\r\n    const handleModalClosed = () => {\r\n        setShowModal(false);\r\n    }\r\n\r\n    const handleIncreaseCardClicked = async (cardId) => {\r\n        try {\r\n            //เพิ่มจำนวนการ์ดใน database\r\n            let response =  await axios.post('http://localhost:5000/weissschwarz-f48e0/us-central1/app/deck/addCard/', {\r\n                deckId:deckId,\r\n                cardId:cardId\r\n            })\r\n            console.log(response.data);\r\n            //แสดงจำนวนการ์ดที่เพิ่มในหน้า frontend\r\n            let dummyDeck = [...deck];\r\n            for(let i = 0; i < dummyDeck.length; i++){\r\n                if(dummyDeck[i].CardId === cardId){\r\n                    dummyDeck[i].count++;\r\n                }\r\n            }\r\n            setDeck(dummyDeck);\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const handleDecreaseCardClicked = async (cardId) => {\r\n        try {\r\n            //ลดจำนวนการ์ดใน database\r\n            let response =  await axios.post('http://localhost:5000/weissschwarz-f48e0/us-central1/app/deck/deleteCard/', {\r\n                deckId:deckId,\r\n                cardId:cardId\r\n            })\r\n            console.log(response.data);\r\n            //แสดงจำนวนการ์ดที่เพิ่มในหน้า frontend\r\n            let dummyDeck = [...deck];\r\n            for(let i = 0; i < dummyDeck.length; i++){\r\n                if(dummyDeck[i].CardId === cardId){\r\n                    dummyDeck[i].count--;\r\n                }\r\n            }\r\n            setDeck(dummyDeck);\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function loadDeckById(deckId){\r\n            try {\r\n                let deckResponse  = await axios.get('http://localhost:5000/weissschwarz-f48e0/us-central1/app/deck/getDeckByDeckId/' + deckId);\r\n                console.log(deckResponse.data);\r\n                setDeckName(deckResponse.data.deck.DeckName);\r\n                if(deckResponse.data.status === 'success'){\r\n                    let cardIds = deckResponse.data.deck.CardIdList;\r\n                    //get card data by cardId\r\n                    let cardResponse = await axios.post('http://localhost:5000/weissschwarz-f48e0/us-central1/app/card/getCardByMultipleCardId', { cardIds })\r\n                    console.log(cardResponse);\r\n                    cardResponse.data.status === 'success' ? setDeck(cardResponse.data.cardData) : setDeck([]);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                throw error;\r\n            }\r\n            \r\n        }\r\n        loadDeckById(deckId);\r\n    }, []);\r\n   \r\n    return(\r\n        <>\r\n            <Container>\r\n                <Row style={{marginTop:'50px'}}>\r\n                    <Col lg={12}><h1>{deckName}</h1></Col>\r\n                    <Col><hr /></Col>\r\n                </Row>\r\n                <Row>\r\n                    {deck.map((item, index) => (\r\n                        //ไม่แสดงการ์ดที่มี 0 ใบหรือน้อยกว่า\r\n                        item.count !== 0 &&\r\n                        <Col xs={6} md={3} lg={2} key={index}>\r\n                            <Card\r\n                                key={index}\r\n                                style={{ \r\n                                    marginTop:'20px', \r\n                                }}\r\n                            >\r\n                                <Card.Img \r\n                                    variant=\"top\" \r\n                                    src={item.cardUrl}\r\n                                    onClick={() => {showCard(item)}}\r\n                                    style={{ cursor:'pointer', }} \r\n                                />\r\n                                <p\r\n                                    style={{\r\n                                        position:'absolute',\r\n                                        right:'0',\r\n                                        top:'0',\r\n                                        marginBottom:'0',\r\n                                        backgroundColor:'black',\r\n                                        color:'white',\r\n                                        padding:'5%',\r\n                                        opacity:'0.8',\r\n                                    }}\r\n                                >\r\n                                    x {item.count}\r\n                                </p>\r\n                                <Card.Text style={{textAlign:'center'}}>\r\n                                    <Button \r\n                                        style={{\r\n                                            float:'left', \r\n                                            margin:'5px 0px'\r\n                                        }}\r\n                                        onClick={() => {handleDecreaseCardClicked(item.CardId)}}\r\n                                    >\r\n                                        -\r\n                                    </Button>\r\n                                    {item.count}/4\r\n                                    <Button \r\n                                        style={{\r\n                                            float:'right', \r\n                                            margin:'5px 0px'\r\n                                        }}\r\n                                        onClick={() => {handleIncreaseCardClicked(item.CardId)}}\r\n                                    >\r\n                                        +\r\n                                    </Button>\r\n                                </Card.Text>\r\n                            </Card>\r\n                        </Col>\r\n                    ))}\r\n                    {/* New Deck */}\r\n                    <Col xs={6} md={3} lg={2}>\r\n                        {/* View card in this series */}\r\n                        <Link \r\n                            to={'/MyDeck/' + deckId + '/Aobuta/addCard'}\r\n                            style={{\r\n                                color:'black',\r\n                                textDecoration:'none',\r\n                                textAlign:'center',\r\n                            }}\r\n                        >\r\n                            <Card\r\n                                style={{ \r\n                                    cursor:'pointer',\r\n                                    marginTop:'20px', \r\n                                    border:'none',\r\n                                }}\r\n                            >\r\n                                <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/new_deck.PNG'} />\r\n                                <Card.Text>+ Add Card</Card.Text>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>   \r\n            </Container>\r\n            {/* Modal */}\r\n            <Modal \r\n                showModal={showModal} \r\n                modalItem={modalItem} \r\n                handleModalClosed={handleModalClosed}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewDeck;","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\RegisterStatus.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ResetPassword.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ResetPasswordStatus.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Navbar.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ViewCard.js",["187","188","189"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Container, \r\n    Row,\r\n    Col,\r\n    Button, \r\n    Table,\r\n} from 'react-bootstrap';\r\nimport Modal from './Modal';\r\n\r\nexport default (props) => {\r\n    const { series, deckId } = useParams();\r\n    const [cards, setCards] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalItem, setModalItem] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/weissschwarz-f48e0/us-central1/app/card/getCardBySeriesName/' + (series === undefined ? props.series : series))\r\n        .then((response) => {\r\n            //console.log(response.data.cards);\r\n            setCards(response.data.cards);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }, [])\r\n\r\n    const handleCardClicked = (card) =>{\r\n        const characterOrder = [ 'name', 'CardId', 'color', 'level', 'cost', 'power', 'soul', 'trigger', 'CardType', 'CharacterType', 'cardUrl', 'text' ];\r\n        const climaxOrder = [ 'name', 'CardId','color', 'trigger', 'CardType', 'cardUrl', 'text' ];\r\n        const eventOrder = [ 'level', 'cost', 'name', 'CardId','color', 'trigger', 'CardType', 'cardUrl', 'text' ];\r\n        const tableItem = {};\r\n        if(card.CardType === 'character'){\r\n            characterOrder.forEach(key => {\r\n                tableItem[key] = card[key];\r\n            });\r\n        }else if(card.CardType === 'event'){\r\n            eventOrder.forEach(key => {\r\n                tableItem[key] = card[key];\r\n            })\r\n        }else{\r\n            climaxOrder.forEach(key => {\r\n                tableItem[key] = card[key];\r\n            })\r\n        }\r\n        setModalItem(tableItem);\r\n        setShowModal(true);\r\n    }\r\n    \r\n    const handleModalClosed = () =>{\r\n        setShowModal(false);\r\n    }\r\n\r\n    const addCardToDeck = async (card) =>{\r\n        try {\r\n            let response = await axios.post('http://localhost:5000/weissschwarz-f48e0/us-central1/app/deck/addCard/', {\r\n                deckId:deckId,\r\n                cardId:card.CardId\r\n            });\r\n            console.log(response.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw error;\r\n        }\r\n        setShowModal(false);\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <Container style={{marginTop:'2%'}}>\r\n                <Row style={{marginBottom:'2%'}}>\r\n                    <Col>\r\n                        {deckId !== undefined &&\r\n                            <Link to={'/MyDeck/' + deckId}>\r\n                                <Button variant=\"danger\"> \r\n                                    <img \r\n                                        src={process.env.PUBLIC_URL + '/back-button-3.svg'}\r\n                                        style={{\r\n                                            width:'1rem',\r\n                                            marginRight:'1rem'\r\n                                        }} \r\n                                        alt=\"...\"\r\n                                    />\r\n                                    กลับไปหน้า deck\r\n                                </Button>\r\n                            </Link>\r\n                        }\r\n                        {deckId === undefined &&\r\n                            <Link to={'/Series'}>\r\n                                <Button variant=\"danger\">\r\n                                    <img \r\n                                        src={process.env.PUBLIC_URL + '/back-button-3.svg'}\r\n                                        style={{\r\n                                            width:'1rem',\r\n                                            marginRight:'1rem'\r\n                                        }} \r\n                                        alt=\"...\"\r\n                                    /> \r\n                                    กลับไปหน้า series\r\n                                </Button>\r\n                            </Link>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <img style={{width:'16rem'}} src=\"https://animekimi.com/wp-content/uploads/2020/01/cU4jHfo1Q9AEPnFqFqtuSA74gdi-185x278.jpg\" alt=\"...\"/>\r\n                        <hr />\r\n                    </Col>\r\n                </Row>\r\n                {['red', 'green', 'blue', 'yellow'].map((color, index) => (\r\n                    <Row key={index}>\r\n                        {cards.filter(value => value.color === color).map((value, index) => (\r\n                            <img \r\n                                key={index} \r\n                                style={style.cardStyle} \r\n                                src={value.cardUrl} \r\n                                alt=\"...\"\r\n                                onClick={() => {handleCardClicked(value)}}\r\n                            />\r\n                        ))}\r\n                    </Row>\r\n                ))}\r\n            </Container>\r\n            <Modal \r\n                showModal={showModal} \r\n                modalItem={modalItem} \r\n                handleModalClosed={handleModalClosed}\r\n                deckId={deckId}\r\n                addCardToDeck={addCardToDeck}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nconst style = {\r\n    cardStyle:{\r\n        width:'6rem', \r\n        padding:'0px',\r\n        margin:'5px 5px',\r\n        cursor:'pointer',\r\n    }\r\n};","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Series.js",["190","191"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NewDeck(){\r\n\r\n    const [allCardSeries, setAllCardSeries] = useState([]);\r\n    const [allSeries, setAllSeries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/weissschwarz-f48e0/us-central1/app/series/getAllSeries')\r\n        .then((response) => {\r\n            setAllSeries(response.data.series);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <Container>\r\n                <Row style={{marginTop:'2%'}}>\r\n                    {/* Display all series */}\r\n                    {allSeries.map((value, index) => (\r\n                        <Col key={index}>\r\n                            <Link to={'Series/' + value.seriesName}>\r\n                                <img \r\n                                    src={value.seriesImage} \r\n                                    style={{ width:'18rem' }} \r\n                                    alt=\"...\"\r\n                                />\r\n                            </Link>\r\n                            <p>{value.seriesName}</p>\r\n                        </Col>\r\n                    ))\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewDeck;","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\MyDeck.js",["192"],"import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Card, Col, Container} from 'react-bootstrap';\r\nimport AddDeck from './AddDeck';\r\n\r\nexport default (props) => {\r\n\r\n    const [addDeck, setAddDeck] = useState(false);\r\n    \r\n    const handleAddDeckClicked = () => {\r\n        setAddDeck(!addDeck);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Container fluid>\r\n                {!addDeck &&\r\n                    <Row \r\n                        style={{\r\n                            marginTop:'25px',\r\n                            marginLeft:'10%',\r\n                        }}\r\n                    >\r\n                        {props.myDeck.map((item, index) =>\r\n                            <Col xs={6} md={3} lg={2} key={index}>\r\n                                <Card \r\n                                    style={{ \r\n                                        border:'none',\r\n                                    }}\r\n                                >\r\n                                    <Link to={'/MyDeck/' + item.DeckId}>\r\n                                        <Card.Img variant=\"top\" src={item.DeckImage}/>\r\n                                    </Link>\r\n                                    <Card.Body >\r\n                                        <Card.Title style={{textAlign:'center'}}>{item.DeckName}</Card.Title>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                        <Col xs={6} md={3} lg={2}>\r\n                                <Card \r\n                                    style={{ \r\n                                        border:'none',\r\n                                        cursor:'pointer',\r\n                                    }}\r\n                                    onClick={handleAddDeckClicked}\r\n                                >\r\n                                    <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/new_deck.PNG'}/>\r\n                                    <Card.Body >\r\n                                        <Card.Title style={{textAlign:'center'}}>+ New Deck</Card.Title>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                {addDeck &&\r\n                    <Row \r\n                        className=\"justify-content-center\"\r\n                        style={{\r\n                            marginTop:'2%',\r\n                        }}\r\n                    >\r\n                        <AddDeck handleAddDeckClicked={handleAddDeckClicked}/>\r\n                    </Row>\r\n                }\r\n            </Container>\r\n        </>\r\n    )\r\n};","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Modal.js",["193"],"import React from 'react';\r\nimport { Modal, Button, Row, Col, Container, Table} from 'react-bootstrap';\r\n\r\nexport default (props) =>{\r\n\r\n    return(\r\n        <>\r\n            <Modal \r\n                show={props.showModal} \r\n                aria-labelledby=\"contained-modal-title-vcenter\" \r\n                onHide={props.handleModalClosed}\r\n                size=\"lg\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {props.modalItem.CardId} {props.modalItem.name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={12} md={12} lg={6}>\r\n                                <img style={{width:'16rem'}} src={props.modalItem.cardUrl} alt=\"...\"/>\r\n                            </Col>\r\n                            <Col xs={12} md={12} lg={6}>\r\n                                <Table striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        {Object.keys(props.modalItem).map((prop, index) =>(\r\n                                            prop !== 'cardUrl' && prop !== 'name' && prop !== 'CardId' && prop !== 'text' &&\r\n                                            <tr key={index}>\r\n                                                <td>{prop}</td>\r\n                                                <td>{props.modalItem[prop]}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row>\r\n                            <Col>\r\n                                <h2>text : </h2>\r\n                                {Array.isArray(props.modalItem['text']) &&\r\n                                    props.modalItem['text'].map((value, index) => (\r\n                                        <p key={index}>{value}</p>\r\n                                ))}\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {props.deckId !== undefined &&\r\n                            <Row className=\"justify-content-center\">\r\n                                <Col xs={6} md={4} lg={6}>\r\n                                    <Button \r\n                                        variant=\"danger\" \r\n                                        style={{\r\n                                            width:'100%', \r\n                                            marginTop:'20px'\r\n                                        }}\r\n                                        onClick={() => {props.addCardToDeck(props.modalItem)}}\r\n                                    >\r\n                                        เพิ่มลงเด็ค\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        }\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.handleModalClosed}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n};\r\n\r\n",["194","195"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\AddDeck.js",["196"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Form,\r\n    Button,\r\n    Col\r\n} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default (props) => {\r\n\r\n    const [series, setSeries] = useState(['hello']);\r\n    const [seriesSelected, setSeriesSelected] = useState('');\r\n    const [deckName, setDeckName] = useState('');\r\n    const handleSeriesSelected = (e) => {\r\n        setSeriesSelected(e.target.value);\r\n    }\r\n    const handleDeckNameChanged = (e) => {\r\n        setDeckName(e.target.value);\r\n    }\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if(deckName === '' || seriesSelected === ''){\r\n            alert('กรุณากรอกข้อมูลให้ครบถ้วน');\r\n        }else{\r\n            try {\r\n                let token = localStorage.getItem('token');\r\n                let data = {\r\n                    deckName:deckName,\r\n                    seriesName:seriesSelected\r\n                }\r\n                let response = await axios.post('http://localhost:5000/weissschwarz-f48e0/us-central1/app/deck/addDeck', data, {\r\n                    headers:{\r\n                        'Access-Control-Allow-Origin':'*',\r\n                        'Authorization': 'Bearer ' + token  \r\n                    }\r\n                })\r\n                console.log(response.data);\r\n            } catch (error) {\r\n                console.log(error);\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/weissschwarz-f48e0/us-central1/app/series/getAllSeries/')\r\n        .then((response) => {\r\n            let series = (response.data.series).map(item => item.seriesName);\r\n            console.log(series);\r\n            setSeries(series);\r\n            setSeriesSelected(series[0]);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            throw error;\r\n        })\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            <Col xs={12} sm={12} md={12} lg={12}>  \r\n                <Button variant=\"danger\" onClick={props.handleAddDeckClicked}> \r\n                    <img \r\n                        src={process.env.PUBLIC_URL + '/back-button-3.svg'}\r\n                        style={{\r\n                            width:'1rem',\r\n                            marginRight:'1rem'\r\n                        }} \r\n                        alt=\"...\"\r\n                    />\r\n                    กลับไปหน้า deck\r\n                </Button>\r\n            </Col>\r\n            <Col xs={12} sm={6} md={6} lg={4}>\r\n                <Form onSubmit={handleFormSubmit} style={{marginTop:'20%'}}>\r\n                    <Form.Group controlId=\"formSelectSeries\">\r\n                        <Form.Label>Series</Form.Label>\r\n                        <Form.Control as=\"select\" value={seriesSelected} onChange={handleSeriesSelected}>\r\n                            {series.map((value, index) => (\r\n                                <option key={index}>{value}</option>\r\n                            ))}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formEnterDeckName\">\r\n                        <Form.Label>Deck Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter your deck name\" onChange={handleDeckNameChanged}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Please give your deck a unique name.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                 \r\n                    <Button \r\n                        variant=\"danger\" \r\n                        type=\"submit\" \r\n                        style={{\r\n                            width:'60%',\r\n                            marginLeft:'20%',\r\n                            marginRight:'20%',\r\n                        }}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n        </>\r\n    )\r\n};\r\n","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Friends.js",["197","198","199"],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":6,"column":8,"nodeType":"206","messageId":"207","endLine":6,"endColumn":16},{"ruleId":"204","severity":1,"message":"208","line":8,"column":8,"nodeType":"206","messageId":"207","endLine":8,"endColumn":14},{"ruleId":"204","severity":1,"message":"209","line":17,"column":3,"nodeType":"206","messageId":"207","endLine":17,"endColumn":7},{"ruleId":"204","severity":1,"message":"210","line":23,"column":10,"nodeType":"206","messageId":"207","endLine":23,"endColumn":20},{"ruleId":"204","severity":1,"message":"211","line":23,"column":21,"nodeType":"206","messageId":"207","endLine":23,"endColumn":34},{"ruleId":"204","severity":1,"message":"212","line":24,"column":10,"nodeType":"206","messageId":"207","endLine":24,"endColumn":24},{"ruleId":"204","severity":1,"message":"213","line":24,"column":25,"nodeType":"206","messageId":"207","endLine":24,"endColumn":42},{"ruleId":"204","severity":1,"message":"214","line":25,"column":10,"nodeType":"206","messageId":"207","endLine":25,"endColumn":23},{"ruleId":"204","severity":1,"message":"215","line":27,"column":9,"nodeType":"206","messageId":"207","endLine":27,"endColumn":23},{"ruleId":"200","replacedBy":"216"},{"ruleId":"202","replacedBy":"217"},{"ruleId":"204","severity":1,"message":"218","line":4,"column":8,"nodeType":"206","messageId":"207","endLine":4,"endColumn":21},{"ruleId":"200","replacedBy":"219"},{"ruleId":"202","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":105,"column":8,"nodeType":"223","endLine":105,"endColumn":10,"suggestions":"224"},{"ruleId":"204","severity":1,"message":"225","line":8,"column":5,"nodeType":"206","messageId":"207","endLine":8,"endColumn":10},{"ruleId":"226","severity":1,"message":"227","line":12,"column":1,"nodeType":"228","endLine":134,"endColumn":3},{"ruleId":"221","severity":1,"message":"229","line":26,"column":8,"nodeType":"223","endLine":26,"endColumn":10,"suggestions":"230"},{"ruleId":"204","severity":1,"message":"231","line":8,"column":12,"nodeType":"206","messageId":"207","endLine":8,"endColumn":25},{"ruleId":"204","severity":1,"message":"232","line":8,"column":27,"nodeType":"206","messageId":"207","endLine":8,"endColumn":43},{"ruleId":"226","severity":1,"message":"227","line":6,"column":1,"nodeType":"228","endLine":69,"endColumn":3},{"ruleId":"226","severity":1,"message":"227","line":4,"column":1,"nodeType":"228","endLine":74,"endColumn":3},{"ruleId":"200","replacedBy":"233"},{"ruleId":"202","replacedBy":"234"},{"ruleId":"226","severity":1,"message":"227","line":9,"column":1,"nodeType":"228","endLine":107,"endColumn":3},{"ruleId":"226","severity":1,"message":"227","line":13,"column":1,"nodeType":"228","endLine":223,"endColumn":3},{"ruleId":"221","severity":1,"message":"235","line":106,"column":8,"nodeType":"223","endLine":106,"endColumn":10,"suggestions":"236"},{"ruleId":"221","severity":1,"message":"235","line":122,"column":8,"nodeType":"223","endLine":122,"endColumn":20,"suggestions":"237"},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'Upload' is defined but never used.","'Link' is defined but never used.","'playerDeck' is assigned a value but never used.","'SetplayerDeck' is assigned a value but never used.","'playerCardtext' is assigned a value but never used.","'SetplayerCardtext' is assigned a value but never used.","'CardInfoImage' is assigned a value but never used.","'HandleCardOver' is assigned a value but never used.",["238"],["239"],"'ResetPassword' is defined but never used.",["238"],["239"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'deckId'. Either include it or remove the dependency array.","ArrayExpression",["240"],"'Table' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'props.series' and 'series'. Either include them or remove the dependency array.",["241"],"'allCardSeries' is assigned a value but never used.","'setAllCardSeries' is assigned a value but never used.",["238"],["239"],"React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["242"],["243"],"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [deckId]",{"range":"252","text":"253"},"Update the dependencies array to be: [props.series, series]",{"range":"254","text":"255"},"Update the dependencies array to be: [db]",{"range":"256","text":"257"},"Update the dependencies array to be: [db, myInviteId]",{"range":"258","text":"259"},[4112,4114],"[deckId]",[875,877],"[props.series, series]",[3657,3659],"[db]",[4158,4170],"[db, myInviteId]"]