[{"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\index.js":"1","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\App.js":"2","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Upload.js":"4","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Board.js":"5","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\firebase.js":"6","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\CardInfo.js":"7","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\BoardStyle.js":"8","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Root.js":"9","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Child.js":"10","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\WaitingRoom.js":"11","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Deck.js":"12","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Memory.js":"13","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Hand.js":"14","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Clock.js":"15","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\FrontRow.js":"16","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\BackRow.js":"17","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Level.js":"18","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Stock.js":"19","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\CheckZone.js":"20","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ClimaxZone.js":"21","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\LogIn.js":"22","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\CardInfoStyle.js":"23","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\AppStyle.js":"24","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Register.js":"25","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Profile.js":"26","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reducer\\index.js":"27","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reducer\\FrontRowReducer.js":"28","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ViewDeck.js":"29","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\RegisterStatus.js":"30","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ResetPassword.js":"31","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ResetPasswordStatus.js":"32","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Navbar.js":"33","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ViewCard.js":"34","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Series.js":"35","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\MyDeck.js":"36","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Modal.js":"37","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\AddDeck.js":"38","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Play.js":"39","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Invited.js":"40"},{"size":762,"mtime":1621877574914,"results":"41","hashOfConfig":"42"},{"size":1917,"mtime":1622479106847,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":11178,"mtime":1621877574910,"results":"45","hashOfConfig":"42"},{"size":19901,"mtime":1622403391344,"results":"46","hashOfConfig":"42"},{"size":466,"mtime":1608715795524,"results":"47","hashOfConfig":"42"},{"size":2190,"mtime":1622403391345,"results":"48","hashOfConfig":"42"},{"size":2110,"mtime":1622403391351,"results":"49","hashOfConfig":"42"},{"size":437,"mtime":1610133193719,"results":"50","hashOfConfig":"42"},{"size":311,"mtime":1610070892244,"results":"51","hashOfConfig":"42"},{"size":3619,"mtime":1621877574913,"results":"52","hashOfConfig":"42"},{"size":4788,"mtime":1621877574899,"results":"53","hashOfConfig":"42"},{"size":2038,"mtime":1621877574903,"results":"54","hashOfConfig":"42"},{"size":897,"mtime":1621877574900,"results":"55","hashOfConfig":"42"},{"size":807,"mtime":1621877574898,"results":"56","hashOfConfig":"42"},{"size":3771,"mtime":1622403391346,"results":"57","hashOfConfig":"42"},{"size":3599,"mtime":1622403391343,"results":"58","hashOfConfig":"42"},{"size":971,"mtime":1621877574901,"results":"59","hashOfConfig":"42"},{"size":1136,"mtime":1621877574909,"results":"60","hashOfConfig":"42"},{"size":1600,"mtime":1621877574895,"results":"61","hashOfConfig":"42"},{"size":1799,"mtime":1621877574897,"results":"62","hashOfConfig":"42"},{"size":4237,"mtime":1622479106854,"results":"63","hashOfConfig":"42"},{"size":271,"mtime":1621877574918,"results":"64","hashOfConfig":"42"},{"size":271,"mtime":1616216350303,"results":"65","hashOfConfig":"42"},{"size":5390,"mtime":1622479106861,"results":"66","hashOfConfig":"42"},{"size":6805,"mtime":1622479106859,"results":"67","hashOfConfig":"42"},{"size":189,"mtime":1621877574915,"results":"68","hashOfConfig":"42"},{"size":480,"mtime":1621877574915,"results":"69","hashOfConfig":"42"},{"size":8743,"mtime":1622480358280,"results":"70","hashOfConfig":"42"},{"size":1396,"mtime":1621877574907,"results":"71","hashOfConfig":"42"},{"size":4415,"mtime":1622479106862,"results":"72","hashOfConfig":"42"},{"size":4408,"mtime":1622479106863,"results":"73","hashOfConfig":"42"},{"size":1990,"mtime":1622479106855,"results":"74","hashOfConfig":"42"},{"size":6145,"mtime":1622479106866,"results":"75","hashOfConfig":"42"},{"size":1383,"mtime":1622479106864,"results":"76","hashOfConfig":"42"},{"size":2765,"mtime":1622427058656,"results":"77","hashOfConfig":"42"},{"size":3411,"mtime":1622049178330,"results":"78","hashOfConfig":"42"},{"size":4059,"mtime":1622479106850,"results":"79","hashOfConfig":"42"},{"size":10834,"mtime":1622479106857,"results":"80","hashOfConfig":"42"},{"size":8876,"mtime":1622479106853,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"18xsjx8",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\index.js",[],["171","172"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\App.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Upload.js",[],["173","174"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Board.js",["175"],"import React,{useState,useEffect} from 'react';\r\n//css\r\nimport style from '../style/BoardStyle';\r\n//component\r\nimport WaitingRoomComponent from './WaitingRoom';\r\nimport DeckComponent from './Deck';\r\nimport MemoryComponent from './Memory';\r\nimport HandComponent from './Hand';\r\nimport ClockComponent from './Clock';\r\nimport FrontRowComponet from './FrontRow';\r\nimport BackRowComponent from './BackRow';\r\nimport LevelComponent from './Level';\r\nimport StockComponent from './Stock';\r\nimport CheckZoneComponent from './CheckZone';\r\nimport ClimaxZoneComponent from './ClimaxZone';\r\n//firebase\r\nimport firebase from '../firebase';\r\n//bootstrap\r\nimport { Col } from 'react-bootstrap';\r\n\r\nfunction Board(props){\r\n\r\n    //player data\r\n    const [FrontRow,setFrontRow] = useState(['empty_card.jpg','empty_card.jpg','empty_card.jpg']);\r\n    const [BackRow,setBackRow] = useState(['empty_card.jpg','empty_card.jpg']);\r\n    const [Hand,setHand] = useState([]);\r\n    const [Clock,setClock] = useState(['empty_card.jpg',\r\n        'empty_card.jpg',\r\n        'empty_card.jpg',\r\n        'empty_card.jpg',\r\n        'empty_card.jpg',\r\n        'empty_card.jpg']);\r\n    const [Stock,setStock] = useState([]);\r\n    const [Level,setLevel] = useState([]);\r\n    const [Deck,setDeck] = useState(props.userDeck);\r\n    const [WaitingRoom,setWaitingRoom] = useState([]);\r\n    const [Memory,setMemory] = useState([]);\r\n    const [CheckZone,setCheckZone] = useState([]);\r\n    const [ClimaxZone,setClimaxZone] = useState([]);\r\n    \r\n    //update real-time player board\r\n    const updateplayerdata = ()=>{\r\n        const db = firebase.firestore();\r\n        let data = {\r\n            deck:Deck,\r\n            backrow:BackRow,\r\n            checkzone:CheckZone,\r\n            climaxzone:ClimaxZone,\r\n            clock:Clock,\r\n            frontrow:FrontRow,\r\n            hand:Hand,\r\n            level:Level,\r\n            memory:Memory,\r\n            stock:Stock,\r\n            waitingroom:WaitingRoom,\r\n        };\r\n        db.collection(\"board\").doc(props.userId).update(data)\r\n        .then(()=>{})\r\n        .catch(err=>console.log(err));\r\n    }\r\n\r\n    useEffect(updateplayerdata,[Deck,BackRow,CheckZone,ClimaxZone,Clock,\r\n        FrontRow,Hand,Level,Memory,Stock,WaitingRoom]);\r\n    \r\n    //opponent data\r\n    const [OpponentFrontRow,setOpponentFrontRow] = useState([]);\r\n    const [OpponentBackRow,setOpponentBackRow] = useState([]);\r\n    const [OpponentHand,setOpponentHand] = useState([]);\r\n    const [OpponentClock,setOpponentClock] = useState([]);\r\n    const [OpponentStock,setOpponentStock] = useState([]);\r\n    const [OpponentLevel,setOpponentLevel] = useState([]);\r\n    const [OpponentDeck,setOpponentDeck] = useState([]);\r\n    const [OpponentWaitingRoom,setOpponentWaitingRoom] = useState([]);\r\n    const [OpponentMemory,setOpponentMemory] = useState([]);\r\n    const [OpponentCheckZone,setOpponentCheckZone] = useState([]);\r\n    const [OpponentClimaxZone,setOpponentClimaxZone] = useState([]);\r\n        \r\n    useEffect(() => {\r\n        const db = firebase.firestore();\r\n        db.collection(\"board\").doc(props.opponentId)\r\n        .onSnapshot(function(doc) {\r\n            //console.log(doc.data())\r\n            setOpponentBackRow(doc.data().backrow)\r\n            setOpponentFrontRow(doc.data().frontrow)\r\n            setOpponentHand(doc.data().hand)\r\n            setOpponentClock(doc.data().clock)\r\n            setOpponentStock(doc.data().stock)\r\n            setOpponentLevel(doc.data().level)\r\n            setOpponentDeck(doc.data().deck)\r\n            setOpponentWaitingRoom(doc.data().waitingroom)\r\n            setOpponentMemory(doc.data().memory)\r\n            setOpponentCheckZone(doc.data().checkzone)\r\n            setOpponentClimaxZone(doc.data().climaxzone)   \r\n        }, function(error) {\r\n            console.log(error)\r\n        });\r\n    }, [props.opponentId]);\r\n\r\n    /*Drag-Drop */\r\n    const [src,setSrc] = useState(\"empty_card.jpg\");\r\n    const [drop,setDrop] = useState(false);\r\n    const [swap,setSwap] = useState(\"\");\r\n    const [zone,setZone] = useState(\"\");\r\n\r\n    const DragStart = (e)=>{\r\n        let zone = ['stock','level','waitingroom','deck','memory'];\r\n        \r\n        if(zone.includes(e.target.attributes['zone'].value)){\r\n            setSrc(e.target.attributes['real_src'].value); // real_src\r\n            setZone(e.target.attributes['zone'].value);\r\n        }\r\n        else if(!e.target.src.includes('empty_card.jpg')){\r\n            setSrc(e.target.src);\r\n            setZone(e.target.attributes['zone'].value);\r\n        }\r\n    }\r\n\r\n    const DragOver = (e)=>{\r\n        e.preventDefault();\r\n    }\r\n\r\n    const DragDrop = (e)=>{\r\n        if(src !== 'empty_card.jpg'){\r\n            let slot = ['hand','stock','level','waitingroom','deck','memory','checkzone','climaxzone'];\r\n            let n = slot.indexOf(e.target.attributes['zone'].value); // check value in list ? number : -1\r\n            if(n !== -1){\r\n                let slot_array = [Hand,Stock,Level,WaitingRoom,Deck,Memory,CheckZone,ClimaxZone];\r\n                let setslot_array = [setHand,setStock,setLevel,setWaitingRoom,setDeck,setMemory,setCheckZone,setClimaxZone];\r\n                let Dummy = [...slot_array[n]];\r\n                Dummy.push(src);\r\n                setslot_array[n](Dummy);\r\n            }else{\r\n                let slot = ['frontrow','backrow','clock'];\r\n                let slot_array = [FrontRow,BackRow,Clock];\r\n                let setslot_array = [setFrontRow,setBackRow,setClock];\r\n                n = slot.indexOf(e.target.attributes['zone'].value);\r\n                let Dummy = [...slot_array[n]];\r\n                setSwap(Dummy[parseInt(e.target.attributes[0].value)]); // swap card if card over in frontrow or backrow\r\n                if(Dummy[parseInt(e.target.attributes[0].value)] !== 'empty_card.jpg' && (zone!=='frontrow' && zone!=='backrow')){ // add overed card in waiting room\r\n                    WaitingRoom.push(Dummy[parseInt(e.target.attributes[0].value)]);;;\r\n                }\r\n                Dummy[parseInt(e.target.attributes[0].value)] = src;\r\n                setslot_array[n](Dummy);\r\n            }\r\n            setSrc('empty_card.jpg');\r\n            setDrop(true);\r\n        }\r\n    }\r\n    const DragEnd = (e) =>{\r\n        if(drop){\r\n            if(e.target.attributes['zone'].value === 'frontrow'){\r\n                let DummyFrontRow = [...FrontRow];\r\n                DummyFrontRow[parseInt(e.target.attributes[0].value)] = swap;\r\n                setFrontRow(DummyFrontRow);\r\n            }else if(e.target.attributes['zone'].value === 'backrow'){\r\n                let DummyBackRow = [...BackRow];\r\n                DummyBackRow[parseInt(e.target.attributes[0].value)] = swap;\r\n                setBackRow(DummyBackRow);\r\n            }else if(e.target.attributes['zone'].value === 'clock'){\r\n                let DummyClock = [...Clock];\r\n                DummyClock[parseInt(e.target.attributes[0].value)] = 'empty_card.jpg';\r\n                setClock(DummyClock);\r\n            }else if(e.target.attributes['zone'].value === 'stock'){\r\n                let DummyStock = [...Stock];\r\n                DummyStock.pop();\r\n                setStock(DummyStock);\r\n            }else if(e.target.attributes['zone'].value === 'deck'){\r\n                let DummyDeck = [...Deck];\r\n                DummyDeck.pop();\r\n                setDeck(DummyDeck);\r\n            }else if(e.target.attributes['zone'].value === 'level'){\r\n                let DummyLevel = [...Level];\r\n                DummyLevel.pop();\r\n                setLevel(DummyLevel);\r\n            }else if(e.target.attributes['zone'].value === 'checkzone'){\r\n                let DummyCheckZone = [...CheckZone];\r\n                DummyCheckZone.splice(parseInt(e.target.attributes['index'].value),1);\r\n                setCheckZone(DummyCheckZone);\r\n            }else if(e.target.attributes['zone'].value === 'climaxzone'){\r\n                let DummyClimaxZone = [...ClimaxZone];\r\n                DummyClimaxZone.splice(parseInt(e.target.attributes['index'].value),1);\r\n                setClimaxZone(DummyClimaxZone);\r\n            }\r\n            else{\r\n                let DummyHand = [...Hand];\r\n                DummyHand.splice(parseInt(e.target.attributes['index'].value),1);\r\n                setHand(DummyHand);\r\n            }\r\n            setDrop(false); \r\n            setSwap('empty_card.jpg');\r\n        }\r\n    }\r\n    const ReturnToHand = (index)=>{\r\n        index = parseInt(index);\r\n        let DummyHand = [...Hand];\r\n        let DummyWaitingRoom = [...WaitingRoom];\r\n        DummyHand.push(DummyWaitingRoom[index]);\r\n        DummyWaitingRoom.splice(index,1);\r\n        setHand(DummyHand);\r\n        setWaitingRoom(DummyWaitingRoom);\r\n    }\r\n\r\n    const shuffle = (array,shuffle_array) =>{\r\n        let n = array.length;\r\n        let r = Math.floor(Math.random() * n);\r\n        if(n === 0){\r\n            return shuffle_array;\r\n        }else{\r\n            shuffle_array.push(array[r]);\r\n            array.splice(r,1);\r\n            shuffle(array,shuffle_array);\r\n        }\r\n    }\r\n\r\n    const RefreshWaitingRoom = ()=>{\r\n        console.log('refresh from Board');\r\n        let Refresh = [...Deck,...WaitingRoom];\r\n        let RefreshDeck = [];\r\n        shuffle(Refresh,RefreshDeck);\r\n        setDeck(RefreshDeck);\r\n        setWaitingRoom([]);\r\n    }\r\n\r\n    const ReturnCardInDeckToHand = (index)=>{\r\n        index = parseInt(index);\r\n        let DummyDeck = [...Deck];\r\n        let DummyHand = [...Hand];\r\n        DummyHand.push(DummyDeck[index]);\r\n        DummyDeck.splice(index,1);\r\n        setDeck(DummyDeck);\r\n        setHand(DummyHand);\r\n    }\r\n\r\n    const DeckShuffle = ()=>{\r\n        let DummyDeck = [...Deck];\r\n        let ShuffleDeck = [];\r\n        shuffle(DummyDeck,ShuffleDeck);\r\n        setDeck(ShuffleDeck);\r\n    }\r\n\r\n    return(\r\n        <Col sm={12} md={12} lg={9} style={style.Board}>\r\n            {/* opponent */}\r\n            <div className=\"container-fluid\" style={style.Field}>  \r\n                <div className=\"row\">\r\n                    {/* memory,deck and waiting room */}\r\n                    <div className=\"col-2\">\r\n                        <WaitingRoomComponent \r\n                            DragOver={DragOver} \r\n                            DragDrop={DragDrop} \r\n                            WaitingRoom ={OpponentWaitingRoom}\r\n                            role='opponent'\r\n                            ReturnToHand={ReturnToHand}\r\n                            RefreshWaitingRoom={RefreshWaitingRoom}\r\n                        />\r\n                        <DeckComponent\r\n                            Deck={OpponentDeck}\r\n                            DragStart={DragStart}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop}\r\n                            DragEnd={DragEnd}\r\n                            role='opponent'\r\n                            ReturnCardInDeckToHand={ReturnCardInDeckToHand}\r\n                            DeckShuffle={DeckShuffle}\r\n                        />\r\n                        <MemoryComponent \r\n                            role='opponent'\r\n                            Memory={OpponentMemory}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop}\r\n                        />\r\n                    </div>\r\n                    {/* main field */}\r\n                    <div className=\"col-8\">\r\n                        {/* Hand */}\r\n                        <HandComponent\r\n                            role='opponent' \r\n                            Hand={OpponentHand}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop}\r\n                            DragStart={DragStart} \r\n                            DragEnd={DragEnd}\r\n                        />\r\n                        {/* Clock */}\r\n                        <ClockComponent\r\n                            Clock={OpponentClock}\r\n                            DragStart={DragStart} \r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop} \r\n                            DragEnd={DragEnd}\r\n                        />\r\n                        {/* Backrow,CheckZone, ClimaxZone */}\r\n                        <div className=\"row justify-content-center\">\r\n                            <CheckZoneComponent\r\n                                role='opponent'\r\n                                CheckZone={OpponentCheckZone}\r\n                                DragStart={DragStart} \r\n                                DragOver={DragOver}\r\n                                DragDrop={DragDrop} \r\n                                DragEnd={DragEnd}\r\n                            />\r\n                            <BackRowComponent\r\n                                BackRow={OpponentBackRow}\r\n                                DragStart={DragStart} \r\n                                DragOver={DragOver}\r\n                                DragDrop={DragDrop} \r\n                                DragEnd={DragEnd}\r\n                            />\r\n                            <ClimaxZoneComponent\r\n                                role='opponent'\r\n                                ClimaxZone={OpponentClimaxZone}\r\n                                DragStart={DragStart} \r\n                                DragOver={DragOver}\r\n                                DragDrop={DragDrop} \r\n                                DragEnd={DragEnd}\r\n                            />\r\n                        </div>\r\n                        {/* FrontRow */}\r\n                        <FrontRowComponet\r\n                            FrontRow={OpponentFrontRow}\r\n                            DragStart={DragStart}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop} \r\n                            DragEnd={DragEnd}\r\n                            HandleCardOver={props.HandleCardOver}\r\n                        />\r\n                    </div>\r\n                    {/* stock and level */}\r\n                    <div className=\"col-2\">\r\n                        {/* level */}\r\n                        <LevelComponent\r\n                            role='opponent'\r\n                            Level={OpponentLevel}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop}\r\n                            DragStart={DragStart}\r\n                            DragEnd={DragEnd}\r\n                        />\r\n                        {/* stock */}\r\n                        <StockComponent\r\n                            role='opponent'\r\n                            Stock={OpponentStock}\r\n                            DragStart={DragStart}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop} \r\n                            DragEnd={DragEnd}\r\n                        />\r\n                    </div>\r\n                </div>         \r\n            </div>\r\n            {/* player */}\r\n            <div className=\"container-fluid\" style={style.Field}>\r\n                <div className=\"row\">\r\n                    {/* stock and level */}\r\n                    <div className=\"col-2\">\r\n                        {/* stock */}\r\n                        <StockComponent\r\n                            role='player'\r\n                            Stock={Stock}\r\n                            DragStart={DragStart}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop} \r\n                            DragEnd={DragEnd}\r\n                        />\r\n                        {/* level */}\r\n                        <LevelComponent\r\n                            role='player'\r\n                            Level={Level}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop}\r\n                            DragStart={DragStart}\r\n                            DragEnd={DragEnd}\r\n                        />\r\n                    </div>\r\n                    {/* main field */}\r\n                    <div className=\"col-8\">\r\n                        {/* FrontRow */}\r\n                        <FrontRowComponet\r\n                            FrontRow={FrontRow}\r\n                            DragStart={DragStart}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop} \r\n                            DragEnd={DragEnd}\r\n                            HandleCardOver={props.HandleCardOver}\r\n                        />\r\n                        {/* Backrow,CheckZone, ClimaxZone */}\r\n                        <div className=\"row justify-content-center\">\r\n                            <ClimaxZoneComponent\r\n                                role='player'\r\n                                ClimaxZone={ClimaxZone}\r\n                                DragStart={DragStart} \r\n                                DragOver={DragOver}\r\n                                DragDrop={DragDrop} \r\n                                DragEnd={DragEnd}\r\n                            />\r\n                            <BackRowComponent\r\n                                BackRow={BackRow}\r\n                                DragStart={DragStart} \r\n                                DragOver={DragOver}\r\n                                DragDrop={DragDrop} \r\n                                DragEnd={DragEnd}\r\n                            />\r\n                            <CheckZoneComponent\r\n                                role='player'\r\n                                CheckZone={CheckZone}\r\n                                DragStart={DragStart} \r\n                                DragOver={DragOver}\r\n                                DragDrop={DragDrop} \r\n                                DragEnd={DragEnd}\r\n                            />\r\n                        </div>\r\n                        {/* Clock */}\r\n                        <ClockComponent\r\n                            Clock={Clock}\r\n                            DragStart={DragStart} \r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop} \r\n                            DragEnd={DragEnd}\r\n                        />\r\n                        {/* Hand */}\r\n                        <HandComponent \r\n                            role='player'\r\n                            Hand={Hand}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop}\r\n                            DragStart={DragStart} \r\n                            DragEnd={DragEnd}\r\n                        />\r\n                    </div>\r\n                    {/* memory,deck and waiting room */}\r\n                    <div className=\"col-2\"> \r\n                        <MemoryComponent\r\n                            role='player' \r\n                            Memory={Memory}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop}\r\n                        />\r\n                        <DeckComponent\r\n                            Deck={Deck}\r\n                            DragStart={DragStart}\r\n                            DragOver={DragOver}\r\n                            DragDrop={DragDrop}\r\n                            DragEnd={DragEnd}\r\n                            role='player'\r\n                            ReturnCardInDeckToHand={ReturnCardInDeckToHand}\r\n                            DeckShuffle={DeckShuffle}\r\n                        />\r\n                        <WaitingRoomComponent\r\n                            DragOver={DragOver} \r\n                            DragDrop={DragDrop} \r\n                            WaitingRoom ={WaitingRoom}\r\n                            role='player'\r\n                            ReturnToHand={ReturnToHand}\r\n                            RefreshWaitingRoom={RefreshWaitingRoom}\r\n                        />\r\n                    </div>\r\n                </div>           \r\n            </div>\r\n        </Col>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Board","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\firebase.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\CardInfo.js",["176"],"import React,{useState,useEffect} from 'react';\r\nimport { Col, Card, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n//css\r\nimport style from '../style/CardInfoStyle';\r\n\r\nfunction CardInfo(props){\r\n\r\n    const [text, setText] = useState([]) \r\n    \r\n    // useEffect(()=>{\r\n    //     let cardtext = props.text.filter(item=>item.url === props.image)\r\n    //     if(cardtext.length > 0)\r\n    //         Settext(cardtext[0].text)\r\n    // },[props.text,props.image])\r\n    useEffect(() => {\r\n        let url = props.image;\r\n        let cardText = (props.userDeck).find(item => item.url === url);\r\n        //console.log(cardText);\r\n        if(cardText !== undefined)\r\n            setText(cardText.text);\r\n    }, [props.image]);\r\n\r\n    return(\r\n        // <div className=\"col-lg-3 col-md-2 col-sm-12\" style={{float:\"left\"}}>\r\n        //     {/* card image */}\r\n        //     <div className=\"card\" style={{width:\"16rem\"}}>\r\n        //         <img src={props.image} className=\"card-img-top\" alt=\"...\"/>\r\n        //     </div>\r\n        //     {/* card text */}\r\n        //     <div className=\"mt-3\" style={style.cardtext} >\r\n        //         {\r\n        //             text.map((item,i)=><p key={i} style={{padding:'10px'}}>{item}</p>)\r\n        //         }\r\n        //     </div>\r\n        //     <Link to=\"/\">\r\n        //         <button onClick={props.handleExitGame} style={{width:'16rem', marginTop:'16%'}}>ออกจากเกม</button>\r\n        //     </Link>\r\n        // </div>\r\n        <Col sm={12} md={2} lg={3}>\r\n             {/* card image */}\r\n            <Card style={{ width:'16rem' }}>\r\n                <Card.Img variant=\"top\" src={props.image} />\r\n            </Card>\r\n            {/* card text */}\r\n            <div className=\"mt-3\" style={style.cardtext} >\r\n                {text.map((item,i)=><p key={i} style={{padding:'10px'}}>{item}</p>)}\r\n            </div>\r\n            {/* exit game */}\r\n            <Link to=\"/\">\r\n                <Button variant=\"danger\" onClick={props.handleExitGame} style={{width:'16rem', marginTop:'16%'}}>ออกจากเกม</Button>\r\n            </Link>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CardInfo","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\BoardStyle.js",["177"],"const style = {\r\n    CardStyle :{\r\n        width:\"3rem\",\r\n        padding:\"0px\",\r\n        marginTop:\"10px\",\r\n        opacity:\"1.0\",\r\n        border:\"1px solid black\",\r\n        borderRadius: \"5px\",\r\n        marginLeft:\"10px\",\r\n        cursor: \"pointer\"\r\n    },\r\n    EmptycardStyle :{\r\n        opacity:\"0.5\",\r\n        cursor:\"auto\",\r\n    },\r\n    ClockStyle :{\r\n        marginLeft:\"0px\"\r\n    },\r\n    HandStyle :{\r\n        width:\"90%\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        height:\"5rem\",\r\n        backgroundColor:\"rgba(255, 255, 255, 0.3)\",\r\n        border:\"1px solid black\",\r\n        borderRadius:\"10px\",\r\n        marginTop:\"10px\",\r\n        marginBottom:\"10px\"\r\n    },\r\n    Field :{\r\n        borderRadius:'25px',\r\n        border:'1px solid black',\r\n        marginBottom:'10px',\r\n        marginTop:'10px'\r\n    },\r\n    Stock :{\r\n        width:'5rem',\r\n        height:'10rem',\r\n        backgroundColor:'rgba(255, 255, 255, 0.3)',\r\n        borderRadius:'10px',\r\n        border:'1px solid black',\r\n        marginTop:'10px',\r\n        marginLeft:'auto',\r\n        marginRight:'auto',\r\n        textAlign:'center',\r\n        position:'relative'\r\n    },\r\n    TapCard :{\r\n        width:'3rem',\r\n        border:'1px solid black',\r\n        borderRadius: '5px',\r\n        transform: 'rotate(90deg)',\r\n        position:'absolute',\r\n        right:'20%',\r\n        cursor: 'pointer'\r\n    },\r\n    TapCardLeft :{\r\n        transform: 'rotate(270deg)'\r\n    },\r\n    UntapCard :{\r\n        width:'3rem',\r\n        border:'1px solid black',\r\n        borderRadius: '5px',\r\n        position:'absolute',\r\n        right:'20%',\r\n        cursor: 'pointer'\r\n    },\r\n    Zone :{\r\n        width:'5rem',\r\n        height:'6rem',\r\n        backgroundColor:'rgba(255, 255, 255, 0.3)',\r\n        borderRadius:'10px',\r\n        border:'1px solid black',\r\n        marginTop:'10px',\r\n        marginLeft:'auto',\r\n        marginRight:'auto',\r\n        textAlign:'center',\r\n        position:'relative'\r\n    },\r\n    Board: {\r\n        backgroundImage:\"url(\" + (process.env.PUBLIC_URL + '/okayu.png') + \")\",\r\n    }\r\n}\r\n\r\nexport default style",["178","179"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Root.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Child.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\WaitingRoom.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Deck.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Memory.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Hand.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Clock.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\FrontRow.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\BackRow.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Level.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Stock.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\CheckZone.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ClimaxZone.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\LogIn.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\CardInfoStyle.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\style\\AppStyle.js",[],["180","181"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Register.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Profile.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reducer\\index.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\reducer\\FrontRowReducer.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ViewDeck.js",["182"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\RegisterStatus.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ResetPassword.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ResetPasswordStatus.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Navbar.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\ViewCard.js",["183","184"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Series.js",[],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\MyDeck.js",["185"],"import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Card, Col, Container} from 'react-bootstrap';\r\nimport AddDeck from './AddDeck';\r\n\r\nexport default (props) => {\r\n\r\n    const [addDeck, setAddDeck] = useState(false);\r\n    \r\n    const handleAddDeckClicked = () => {\r\n        setAddDeck(!addDeck);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Container fluid>\r\n                {!addDeck &&\r\n                    <Row \r\n                        style={{\r\n                            marginTop:'25px',\r\n                            marginLeft:'10%',\r\n                        }}\r\n                    >\r\n                        {props.myDeck.map((item, index) =>\r\n                            <Col xs={6} md={3} lg={2} key={index}>\r\n                                <Card \r\n                                    style={{ \r\n                                        border:'none',\r\n                                    }}\r\n                                >\r\n                                    <Link to={'/MyDeck/' + item.DeckId}>\r\n                                        <Card.Img variant=\"top\" src={item.DeckImage}/>\r\n                                    </Link>\r\n                                    <Card.Body >\r\n                                        <Card.Title style={{textAlign:'center'}}>{item.DeckName}</Card.Title>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                        <Col xs={6} md={3} lg={2}>\r\n                                <Card \r\n                                    style={{ \r\n                                        border:'none',\r\n                                        cursor:'pointer',\r\n                                    }}\r\n                                    onClick={handleAddDeckClicked}\r\n                                >\r\n                                    <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + '/new_deck.PNG'}/>\r\n                                    <Card.Body >\r\n                                        <Card.Title style={{textAlign:'center'}}>+ New Deck</Card.Title>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                {addDeck &&\r\n                    <Row \r\n                        className=\"justify-content-center\"\r\n                        style={{\r\n                            marginTop:'2%',\r\n                        }}\r\n                    >\r\n                        <AddDeck handleAddDeckClicked={handleAddDeckClicked}/>\r\n                    </Row>\r\n                }\r\n            </Container>\r\n        </>\r\n    )\r\n};","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Modal.js",["186"],"import React from 'react';\r\nimport { Modal, Button, Row, Col, Container, Table} from 'react-bootstrap';\r\n\r\nexport default (props) =>{\r\n\r\n    return(\r\n        <>\r\n            <Modal \r\n                show={props.showModal} \r\n                aria-labelledby=\"contained-modal-title-vcenter\" \r\n                onHide={props.handleModalClosed}\r\n                size=\"lg\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {props.modalItem.CardId} {props.modalItem.name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={12} md={12} lg={6}>\r\n                                <img style={{width:'16rem'}} src={props.modalItem.cardUrl} alt=\"...\"/>\r\n                            </Col>\r\n                            <Col xs={12} md={12} lg={6}>\r\n                                <Table striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        {Object.keys(props.modalItem).map((prop, index) =>(\r\n                                            prop !== 'cardUrl' && prop !== 'name' && prop !== 'CardId' && prop !== 'text' &&\r\n                                            <tr key={index}>\r\n                                                <td>{prop}</td>\r\n                                                <td>{props.modalItem[prop]}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row>\r\n                            <Col>\r\n                                <h2>text : </h2>\r\n                                {Array.isArray(props.modalItem['text']) &&\r\n                                    props.modalItem['text'].map((value, index) => (\r\n                                        <p key={index}>{value}</p>\r\n                                ))}\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {props.deckId !== undefined &&\r\n                            <Row className=\"justify-content-center\">\r\n                                <Col xs={6} md={4} lg={6}>\r\n                                    <Button \r\n                                        variant=\"danger\" \r\n                                        style={{\r\n                                            width:'100%', \r\n                                            marginTop:'20px'\r\n                                        }}\r\n                                        onClick={() => {props.addCardToDeck(props.modalItem)}}\r\n                                    >\r\n                                        เพิ่มลงเด็ค\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        }\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={props.handleModalClosed}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n};\r\n\r\n","C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\AddDeck.js",["187"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Play.js",["188","189","190"],"C:\\Users\\acer\\Desktop\\Weiss schwarz\\frontend\\src\\component\\Invited.js",["191","192"],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"193","replacedBy":"197"},{"ruleId":"195","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":62,"column":32,"nodeType":"201","endLine":63,"endColumn":54,"suggestions":"202"},{"ruleId":"199","severity":1,"message":"203","line":22,"column":8,"nodeType":"201","endLine":22,"endColumn":21,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":81,"column":74,"nodeType":"207","messageId":"208","endLine":81,"endColumn":75},{"ruleId":"193","replacedBy":"209"},{"ruleId":"195","replacedBy":"210"},{"ruleId":"193","replacedBy":"211"},{"ruleId":"195","replacedBy":"212"},{"ruleId":"199","severity":1,"message":"213","line":105,"column":8,"nodeType":"201","endLine":105,"endColumn":10,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":11,"column":1,"nodeType":"217","endLine":141,"endColumn":3},{"ruleId":"199","severity":1,"message":"218","line":29,"column":8,"nodeType":"201","endLine":29,"endColumn":10,"suggestions":"219"},{"ruleId":"215","severity":1,"message":"216","line":6,"column":1,"nodeType":"217","endLine":69,"endColumn":3},{"ruleId":"215","severity":1,"message":"216","line":4,"column":1,"nodeType":"217","endLine":74,"endColumn":3},{"ruleId":"215","severity":1,"message":"216","line":9,"column":1,"nodeType":"217","endLine":107,"endColumn":3},{"ruleId":"215","severity":1,"message":"216","line":13,"column":1,"nodeType":"217","endLine":258,"endColumn":3},{"ruleId":"199","severity":1,"message":"220","line":108,"column":8,"nodeType":"201","endLine":108,"endColumn":10,"suggestions":"221"},{"ruleId":"199","severity":1,"message":"220","line":126,"column":8,"nodeType":"201","endLine":126,"endColumn":20,"suggestions":"222"},{"ruleId":"215","severity":1,"message":"216","line":14,"column":1,"nodeType":"217","endLine":208,"endColumn":3},{"ruleId":"199","severity":1,"message":"220","line":87,"column":8,"nodeType":"201","endLine":87,"endColumn":16,"suggestions":"223"},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],["224"],["225"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.userId'. Either include it or remove the dependency array.","ArrayExpression",["226"],"React Hook useEffect has a missing dependency: 'props.userDeck'. Either include it or remove the dependency array.",["227"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["224"],["225"],["224"],["225"],"React Hook useEffect has a missing dependency: 'deckId'. Either include it or remove the dependency array.",["228"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'props.series' and 'series'. Either include them or remove the dependency array.",["229"],"React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["230"],["231"],["232"],"no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [Deck, BackRow, CheckZone, ClimaxZone, Clock, FrontRow, Hand, Level, Memory, Stock, WaitingRoom, props.userId]",{"range":"247","text":"248"},"Update the dependencies array to be: [props.image, props.userDeck]",{"range":"249","text":"250"},"Update the dependencies array to be: [deckId]",{"range":"251","text":"252"},"Update the dependencies array to be: [props.series, series]",{"range":"253","text":"254"},"Update the dependencies array to be: [db]",{"range":"255","text":"256"},"Update the dependencies array to be: [db, myInviteId]",{"range":"257","text":"258"},"Update the dependencies array to be: [db, userId]",{"range":"259","text":"260"},[2139,2235],"[Deck, BackRow, CheckZone, ClimaxZone, Clock, FrontRow, Hand, Level, Memory, Stock, WaitingRoom, props.userId]",[734,747],"[props.image, props.userDeck]",[4112,4114],"[deckId]",[1052,1054],"[props.series, series]",[3680,3682],"[db]",[4333,4345],"[db, myInviteId]",[2760,2768],"[db, userId]"]